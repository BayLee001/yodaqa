/// The weights of individual elements of the FV.  These weights
// are output by data/ml/answer-train.py as this:
//
// 430 answersets, 40970 answers
// + Cross-validation:
// (test) PERANS acc/prec/rcl/F2 = 0.862/0.036/0.710/0.148, @70 prec/rcl/F2 = 0.058/0.531/0.201, PERQ avail 0.674, any good = [0.497], simple 0.346
// (test) PERANS acc/prec/rcl/F2 = 0.860/0.039/0.743/0.161, @70 prec/rcl/F2 = 0.061/0.586/0.216, PERQ avail 0.707, any good = [0.493], simple 0.414
// (test) PERANS acc/prec/rcl/F2 = 0.848/0.035/0.790/0.150, @70 prec/rcl/F2 = 0.058/0.601/0.208, PERQ avail 0.665, any good = [0.538], simple 0.425
// (test) PERANS acc/prec/rcl/F2 = 0.849/0.036/0.742/0.152, @70 prec/rcl/F2 = 0.057/0.574/0.203, PERQ avail 0.721, any good = [0.510], simple 0.406
// (test) PERANS acc/prec/rcl/F2 = 0.855/0.036/0.725/0.149, @70 prec/rcl/F2 = 0.053/0.523/0.189, PERQ avail 0.693, any good = [0.493], simple 0.396
// (test) PERANS acc/prec/rcl/F2 = 0.851/0.035/0.750/0.149, @70 prec/rcl/F2 = 0.054/0.615/0.201, PERQ avail 0.688, any good = [0.527], simple 0.427
// (test) PERANS acc/prec/rcl/F2 = 0.855/0.039/0.776/0.161, @70 prec/rcl/F2 = 0.062/0.632/0.222, PERQ avail 0.707, any good = [0.510], simple 0.393
// (test) PERANS acc/prec/rcl/F2 = 0.855/0.036/0.722/0.149, @70 prec/rcl/F2 = 0.058/0.603/0.210, PERQ avail 0.702, any good = [0.527], simple 0.432
// (test) PERANS acc/prec/rcl/F2 = 0.856/0.035/0.711/0.148, @70 prec/rcl/F2 = 0.056/0.572/0.201, PERQ avail 0.707, any good = [0.517], simple 0.411
// (test) PERANS acc/prec/rcl/F2 = 0.839/0.033/0.757/0.141, @70 prec/rcl/F2 = 0.053/0.615/0.198, PERQ avail 0.688, any good = [0.539], simple 0.441
// Cross-validation score mean 51.528% S.D. 1.665%
// + Full training set:
// (full) PERANS acc/prec/rcl/F2 = 0.846/1.000/0.159/0.191, @70 prec/rcl/F2 = 1.000/0.077/0.095, PERQ avail 0.698, any good = [0.560], simple 0.412
// Full model is LogisticRegression(C=1.0, class_weight='auto', dual=False, fit_intercept=True,           intercept_scaling=1, penalty='l2', random_state=None, tol=0.0001)
//
	/*                  occurences @,%,! */ -0.110262,  0.024377,  0.000000, /*                  occurences d01: -0.085885 */
	/*              resultLogScore @,%,! */  0.293537, -0.227101,  0.000000, /*              resultLogScore d01:  0.066436 */
	/*             passageLogScore @,%,! */  0.343093,  0.423771, -0.202480, /*             passageLogScore d01:  0.969343 */
	/*                   originPsg @,%,! */  0.181781, -0.211452, -0.202480, /*                   originPsg d01:  0.172809 */
	/*              originPsgFirst @,%,! */ -0.186211, -0.103985,  0.165512, /*              originPsgFirst d01: -0.455708 */
	/*                 originPsgNP @,%,! */  0.214920, -0.139170, -0.235619, /*                 originPsgNP d01:  0.311369 */
	/*                 originPsgNE @,%,! */ -0.023937, -0.173759,  0.003239, /*                 originPsgNE d01: -0.200936 */
	/*        originPsgNPByLATSubj @,%,! */  0.649071,  0.111171, -0.669769, /*        originPsgNPByLATSubj d01:  1.430012 */
	/*           originPsgSurprise @,%,! */  0.014015,  0.102043, -0.034714, /*           originPsgSurprise d01:  0.150772 */
	/*              originDocTitle @,%,! */ -0.167113,  0.430881,  0.146414, /*              originDocTitle d01:  0.117354 */
	/*           originDBpRelation @,%,! */  0.112297,  0.122267, -0.132995, /*           originDBpRelation d01:  0.367559 */
	/*               originConcept @,%,! */ -0.332617,  0.377298,  0.311918, /*               originConcept d01: -0.267237 */
	/*      originConceptBySubject @,%,! */  0.026628,  0.309917, -0.047327, /*      originConceptBySubject d01:  0.383872 */
	/*          originConceptByLAT @,%,! */  0.429743, -0.081420, -0.450441, /*          originConceptByLAT d01:  0.798765 */
	/*           originConceptByNE @,%,! */  0.131027, -0.086796, -0.151725, /*           originConceptByNE d01:  0.195956 */
	/*              originMultiple @,%,! */ -0.080509,  0.115288,  0.059811, /*              originMultiple d01: -0.025033 */
	/*                   spWordNet @,%,! */ -0.205112,  0.137523, -0.447364, /*                   spWordNet d01:  0.379774 */
	/*               LATQNoWordNet @,%,! */ -0.095635,  0.000000,  0.074936, /*               LATQNoWordNet d01: -0.170571 */
	/*               LATANoWordNet @,%,! */ -0.106478,  0.180421,  0.085779, /*               LATANoWordNet d01: -0.011836 */
	/*              tyCorPassageSp @,%,! */  0.816743,  0.279197,  0.169941, /*              tyCorPassageSp d01:  0.925998 */
	/*            tyCorPassageDist @,%,! */  0.009465, -0.538860,  0.169941, /*            tyCorPassageDist d01: -0.699336 */
	/*          tyCorPassageInside @,%,! */  0.118321,  0.219780, -0.139019, /*          tyCorPassageInside d01:  0.477120 */
	/*                 simpleScore @,%,! */  0.005885,  0.206255,  0.000000, /*                 simpleScore d01:  0.212140 */
	/*                       LATNE @,%,! */ -0.049904,  0.225578,  0.029206, /*                       LATNE d01:  0.146468 */
	/*                  LATDBpType @,%,! */ -0.047197,  0.100219,  0.026499, /*                  LATDBpType d01:  0.026523 */
	/*                 LATQuantity @,%,! */ -0.010980, -0.101779, -0.009719, /*                 LATQuantity d01: -0.103041 */
	/*               LATQuantityCD @,%,! */  0.286491, -0.148624, -0.307189, /*               LATQuantityCD d01:  0.445056 */
	/*               LATWnInstance @,%,! */  0.070001,  0.033316, -0.090699, /*               LATWnInstance d01:  0.194016 */
	/*              LATDBpRelation @,%,! */  0.112297,  0.122267, -0.132995, /*              LATDBpRelation d01:  0.367559 */
	/*                 tyCorSpQHit @,%,! */  0.137424,  0.281014, -0.158123, /*                 tyCorSpQHit d01:  0.576561 */
	/*                 tyCorSpAHit @,%,! */ -0.157912, -0.303624,  0.137213, /*                 tyCorSpAHit d01: -0.598749 */
	/*                    tyCorANE @,%,! */  0.258211,  0.064597, -0.278909, /*                    tyCorANE d01:  0.601717 */
	/*                   tyCorADBp @,%,! */  0.131396,  0.092991, -0.152095, /*                   tyCorADBp d01:  0.376482 */
	/*              tyCorAQuantity @,%,! */ -0.002681, -0.039415, -0.018017, /*              tyCorAQuantity d01: -0.024079 */
	/*            tyCorAQuantityCD @,%,! */  0.137355,  0.404523, -0.158054, /*            tyCorAQuantityCD d01:  0.699932 */
	/*            tyCorAWnInstance @,%,! */ -0.407737,  0.206019,  0.387039, /*            tyCorAWnInstance d01: -0.588757 */
	/*           tyCorADBpRelation @,%,! */ -0.156796,  0.092056,  0.136097, /*           tyCorADBpRelation d01: -0.200837 */
	/*                   topAnswer @,%,! */  0.000000,  0.000000, -0.020698, /*                   topAnswer d01:  0.020698 */
	/*                  solrHitsEv @,%,! */  0.000000,  0.000000, -0.020698, /*                  solrHitsEv d01:  0.020698 */
	/*                 solrAHitsEv @,%,! */  0.000000,  0.000000, -0.020698, /*                 solrAHitsEv d01:  0.020698 */
	/*             solrHitsANormEv @,%,! */  0.000000,  0.000000, -0.020698, /*             solrHitsANormEv d01:  0.020698 */
	/*              solrMaxScoreEv @,%,! */  0.000000,  0.000000, -0.020698, /*              solrMaxScoreEv d01:  0.020698 */
	/*          solrHitsMaxScoreEv @,%,! */  0.000000,  0.000000, -0.020698, /*          solrHitsMaxScoreEv d01:  0.020698 */
	/*                 phase0Score @,%,! */ -0.384695,  0.844486,  0.000000, /*                 phase0Score d01:  0.459792 */
	/*                 phase1Score @,%,! */  0.000000,  0.000000, -0.020698, /*                 phase1Score d01:  0.020698 */
/* intercept */ -0.020698
