/// The weights of individual elements of the FV.  These weights
// are output by data/ml/answer-train.py as this:
//
// 430 answersets, 40950 answers
// + Cross-validation:
// (test) PERANS acc/prec/rcl/F2 = 0.836/0.035/0.766/0.146, @70 prec/rcl/F2 = 0.056/0.578/0.202, PERQ avail 0.716, any good = [0.510], simple 0.433
// (test) PERANS acc/prec/rcl/F2 = 0.852/0.033/0.682/0.137, @70 prec/rcl/F2 = 0.050/0.507/0.180, PERQ avail 0.688, any good = [0.475], simple 0.414
// (test) PERANS acc/prec/rcl/F2 = 0.851/0.035/0.728/0.148, @70 prec/rcl/F2 = 0.057/0.563/0.204, PERQ avail 0.702, any good = [0.531], simple 0.356
// (test) PERANS acc/prec/rcl/F2 = 0.848/0.034/0.741/0.144, @70 prec/rcl/F2 = 0.053/0.565/0.194, PERQ avail 0.684, any good = [0.540], simple 0.405
// (test) PERANS acc/prec/rcl/F2 = 0.845/0.034/0.719/0.141, @70 prec/rcl/F2 = 0.052/0.582/0.192, PERQ avail 0.712, any good = [0.484], simple 0.400
// (test) PERANS acc/prec/rcl/F2 = 0.843/0.032/0.734/0.137, @70 prec/rcl/F2 = 0.049/0.587/0.183, PERQ avail 0.665, any good = [0.486], simple 0.421
// (test) PERANS acc/prec/rcl/F2 = 0.853/0.035/0.733/0.145, @70 prec/rcl/F2 = 0.055/0.582/0.199, PERQ avail 0.679, any good = [0.485], simple 0.438
// (test) PERANS acc/prec/rcl/F2 = 0.840/0.035/0.722/0.147, @70 prec/rcl/F2 = 0.058/0.617/0.211, PERQ avail 0.753, any good = [0.508], simple 0.432
// (test) PERANS acc/prec/rcl/F2 = 0.840/0.033/0.760/0.142, @70 prec/rcl/F2 = 0.049/0.575/0.184, PERQ avail 0.679, any good = [0.500], simple 0.430
// (test) PERANS acc/prec/rcl/F2 = 0.843/0.035/0.745/0.147, @70 prec/rcl/F2 = 0.058/0.569/0.206, PERQ avail 0.712, any good = [0.532], simple 0.412
// Cross-validation score mean 50.497% S.D. 2.190%
// + Full training set:
// (full) PERANS acc/prec/rcl/F2 = 0.844/1.000/0.160/0.192, @70 prec/rcl/F2 = 1.000/0.077/0.095, PERQ avail 0.700, any good = [0.565], simple 0.411
// Full model is LogisticRegression(C=1.0, class_weight='auto', dual=False, fit_intercept=True,           intercept_scaling=1, penalty='l2', random_state=None, tol=0.0001)
//
	/*                  occurences @,%,! */ -0.114733,  0.023542,  0.000000, /*                  occurences d01: -0.091192 */
	/*              resultLogScore @,%,! */  0.284416, -0.133373,  0.000000, /*              resultLogScore d01:  0.151044 */
	/*             passageLogScore @,%,! */  0.343457,  0.477396, -0.100690, /*             passageLogScore d01:  0.921543 */
	/*                   originPsg @,%,! */  0.086413, -0.249814, -0.100690, /*                   originPsg d01: -0.062711 */
	/*              originPsgFirst @,%,! */ -0.191129, -0.071637,  0.176851, /*              originPsgFirst d01: -0.439618 */
	/*                 originPsgNP @,%,! */  0.377715, -0.173991, -0.391993, /*                 originPsgNP d01:  0.595716 */
	/*                 originPsgNE @,%,! */  0.027808, -0.069064, -0.042085, /*                 originPsgNE d01:  0.000829 */
	/*        originPsgNPByLATSubj @,%,! */  0.673418,  0.101994, -0.687695, /*        originPsgNPByLATSubj d01:  1.463107 */
	/*           originPsgSurprise @,%,! */ -0.031776,  0.118792,  0.017499, /*           originPsgSurprise d01:  0.069517 */
	/*              originDocTitle @,%,! */ -0.067438,  0.390855,  0.053161, /*              originDocTitle d01:  0.270256 */
	/*           originDBpRelation @,%,! */  0.055441,  0.129993, -0.069718, /*           originDBpRelation d01:  0.255151 */
	/*               originConcept @,%,! */ -0.332324,  0.309343,  0.318047, /*               originConcept d01: -0.341027 */
	/*      originConceptBySubject @,%,! */  0.029386,  0.343750, -0.043664, /*      originConceptBySubject d01:  0.416799 */
	/*          originConceptByLAT @,%,! */  0.408768, -0.083026, -0.423045, /*          originConceptByLAT d01:  0.748787 */
	/*           originConceptByNE @,%,! */  0.112768, -0.084595, -0.127045, /*           originConceptByNE d01:  0.155218 */
	/*              originMultiple @,%,! */  0.249997, -0.158030, -0.264275, /*              originMultiple d01:  0.356242 */
	/*                   spWordNet @,%,! */ -0.255480,  0.141773, -0.345717, /*                   spWordNet d01:  0.232010 */
	/*               LATQNoWordNet @,%,! */ -0.118440,  0.000000,  0.104163, /*               LATQNoWordNet d01: -0.222603 */
	/*               LATANoWordNet @,%,! */ -0.170204,  0.096421,  0.155927, /*               LATANoWordNet d01: -0.229710 */
	/*              tyCorPassageSp @,%,! */  0.774569,  0.335828,  0.161832, /*              tyCorPassageSp d01:  0.948565 */
	/*            tyCorPassageDist @,%,! */  0.053220, -0.595558,  0.161832, /*            tyCorPassageDist d01: -0.704169 */
	/*          tyCorPassageInside @,%,! */  0.128142,  0.177389, -0.142420, /*          tyCorPassageInside d01:  0.447952 */
	/*                 simpleScore @,%,! */  0.006534,  0.199153,  0.000000, /*                 simpleScore d01:  0.205687 */
	/*                       LATNE @,%,! */ -0.072902,  0.194304,  0.058625, /*                       LATNE d01:  0.062777 */
	/*                  LATDBpType @,%,! */  0.011836,  0.103077, -0.026113, /*                  LATDBpType d01:  0.141027 */
	/*                 LATQuantity @,%,! */ -0.009581, -0.088594, -0.004696, /*                 LATQuantity d01: -0.093479 */
	/*               LATQuantityCD @,%,! */  0.311271, -0.166550, -0.325549, /*               LATQuantityCD d01:  0.470270 */
	/*               LATWnInstance @,%,! */  0.051661, -0.028501, -0.065938, /*               LATWnInstance d01:  0.089098 */
	/*              LATDBpRelation @,%,! */  0.055441,  0.129993, -0.069718, /*              LATDBpRelation d01:  0.255151 */
	/*                 tyCorSpQHit @,%,! */  0.135797,  0.276880, -0.150075, /*                 tyCorSpQHit d01:  0.562752 */
	/*                 tyCorSpAHit @,%,! */ -0.135999, -0.340750,  0.121722, /*                 tyCorSpAHit d01: -0.598471 */
	/*                    tyCorANE @,%,! */  0.213646,  0.161801, -0.227924, /*                    tyCorANE d01:  0.603372 */
	/*                   tyCorADBp @,%,! */  0.123586,  0.112329, -0.137863, /*                   tyCorADBp d01:  0.373778 */
	/*              tyCorAQuantity @,%,! */ -0.002241, -0.038461, -0.012037, /*              tyCorAQuantity d01: -0.028665 */
	/*            tyCorAQuantityCD @,%,! */  0.200183,  0.419338, -0.214460, /*            tyCorAQuantityCD d01:  0.833981 */
	/*            tyCorAWnInstance @,%,! */ -0.405819,  0.224876,  0.391542, /*            tyCorAWnInstance d01: -0.572486 */
	/*           tyCorADBpRelation @,%,! */ -0.187542,  0.146295,  0.173265, /*           tyCorADBpRelation d01: -0.214512 */
	/*                   topAnswer @,%,! */  0.000000,  0.000000, -0.014277, /*                   topAnswer d01:  0.014277 */
	/*                  solrHitsEv @,%,! */  0.000000,  0.000000, -0.014277, /*                  solrHitsEv d01:  0.014277 */
	/*                 solrAHitsEv @,%,! */  0.000000,  0.000000, -0.014277, /*                 solrAHitsEv d01:  0.014277 */
	/*             solrHitsANormEv @,%,! */  0.000000,  0.000000, -0.014277, /*             solrHitsANormEv d01:  0.014277 */
	/*              solrMaxScoreEv @,%,! */  0.000000,  0.000000, -0.014277, /*              solrMaxScoreEv d01:  0.014277 */
	/*          solrHitsMaxScoreEv @,%,! */  0.000000,  0.000000, -0.014277, /*          solrHitsMaxScoreEv d01:  0.014277 */
	/*                 phase0Score @,%,! */ -0.302682,  0.869488,  0.000000, /*                 phase0Score d01:  0.566806 */
	/*                 phase1Score @,%,! */  0.000000,  0.000000, -0.014277, /*                 phase1Score d01:  0.014277 */
/* intercept */ -0.014277
