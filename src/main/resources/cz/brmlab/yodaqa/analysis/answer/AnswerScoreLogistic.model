/// The weights of individual elements of the FV.  These weights
// are output by data/ml/answer-train.py as this:
//
// 430 answersets, 91488 answers
// + Cross-validation:
// (test) PERANS acc/prec/rcl/F2 = 0.774/0.061/0.613/0.219, @70 prec/rcl/F2 = 0.103/0.397/0.252, PERQ avail 0.726, any good = [0.508], simple 0.511
// (test) PERANS acc/prec/rcl/F2 = 0.765/0.060/0.571/0.212, @70 prec/rcl/F2 = 0.100/0.376/0.242, PERQ avail 0.740, any good = [0.496], simple 0.497
// (test) PERANS acc/prec/rcl/F2 = 0.743/0.053/0.590/0.194, @70 prec/rcl/F2 = 0.084/0.371/0.221, PERQ avail 0.721, any good = [0.511], simple 0.520
// (test) PERANS acc/prec/rcl/F2 = 0.774/0.063/0.604/0.223, @70 prec/rcl/F2 = 0.105/0.371/0.246, PERQ avail 0.763, any good = [0.477], simple 0.532
// (test) PERANS acc/prec/rcl/F2 = 0.791/0.053/0.567/0.192, @70 prec/rcl/F2 = 0.091/0.296/0.204, PERQ avail 0.726, any good = [0.421], simple 0.442
// (test) PERANS acc/prec/rcl/F2 = 0.763/0.062/0.618/0.221, @70 prec/rcl/F2 = 0.108/0.346/0.240, PERQ avail 0.726, any good = [0.505], simple 0.562
// (test) PERANS acc/prec/rcl/F2 = 0.743/0.055/0.617/0.202, @70 prec/rcl/F2 = 0.101/0.360/0.238, PERQ avail 0.767, any good = [0.444], simple 0.485
// (test) PERANS acc/prec/rcl/F2 = 0.771/0.057/0.588/0.206, @70 prec/rcl/F2 = 0.092/0.301/0.207, PERQ avail 0.735, any good = [0.476], simple 0.542
// (test) PERANS acc/prec/rcl/F2 = 0.743/0.062/0.645/0.225, @70 prec/rcl/F2 = 0.110/0.422/0.269, PERQ avail 0.749, any good = [0.558], simple 0.501
// (test) PERANS acc/prec/rcl/F2 = 0.758/0.060/0.586/0.212, @70 prec/rcl/F2 = 0.097/0.322/0.220, PERQ avail 0.735, any good = [0.519], simple 0.539
// Cross-validation score mean 49.133% S.D. 3.698%
// + Full training set:
// (full) PERANS acc/prec/rcl/F2 = 0.768/1.000/0.238/0.281, @70 prec/rcl/F2 = 1.000/0.083/0.102, PERQ avail 0.740, any good = [0.525], simple 0.510
// Full model is LogisticRegression(C=1.0, class_weight='auto', dual=False, fit_intercept=True,           intercept_scaling=1, penalty='l2', random_state=None, tol=0.0001)
//
	/*                  occurences @,%,! */  0.000720, -0.044564,  0.000000, /*                  occurences d01: -0.043844 */
	/*              resultLogScore @,%,! */  0.562529,  0.017061,  0.000000, /*              resultLogScore d01:  0.579590 */
	/*             passageLogScore @,%,! */ -0.475224,  0.749166,  0.132422, /*             passageLogScore d01:  0.141520 */
	/*                   originPsg @,%,! */ -0.034805, -0.514094,  0.132422, /*                   originPsg d01: -0.681320 */
	/*              originPsgFirst @,%,! */  0.163780, -0.211274, -0.066163, /*              originPsgFirst d01:  0.018669 */
	/*                 originPsgNP @,%,! */  0.660887,  0.017144, -0.563270, /*                 originPsgNP d01:  1.241301 */
	/*                 originPsgNE @,%,! */ -0.118895,  0.080559,  0.216512, /*                 originPsgNE d01: -0.254849 */
	/*        originPsgNPByLATSubj @,%,! */  0.421298, -0.023592, -0.323681, /*        originPsgNPByLATSubj d01:  0.721388 */
	/*           originPsgSurprise @,%,! */ -0.059814,  0.049967,  0.157431, /*           originPsgSurprise d01: -0.167278 */
	/*              originDocTitle @,%,! */  0.702209,  0.130782, -0.604592, /*              originDocTitle d01:  1.437582 */
	/*           originDBpRelation @,%,! */  0.055677,  0.007341,  0.041940, /*           originDBpRelation d01:  0.021078 */
	/*               originConcept @,%,! */  0.069085, -0.321818,  0.028532, /*               originConcept d01: -0.281264 */
	/*      originConceptBySubject @,%,! */  0.234264,  0.006661, -0.136647, /*      originConceptBySubject d01:  0.377573 */
	/*          originConceptByLAT @,%,! */  0.483079, -0.683861, -0.385462, /*          originConceptByLAT d01:  0.184679 */
	/*           originConceptByNE @,%,! */  0.451532, -0.460885, -0.353915, /*           originConceptByNE d01:  0.344562 */
	/*              originMultiple @,%,! */ -0.133710, -0.153851,  0.231327, /*              originMultiple d01: -0.518888 */
	/*                   spWordNet @,%,! */ -0.131753,  0.225933, -0.490288, /*                   spWordNet d01:  0.584467 */
	/*               LATQNoWordNet @,%,! */  0.001190,  0.000000,  0.096427, /*               LATQNoWordNet d01: -0.095237 */
	/*               LATANoWordNet @,%,! */  0.338764, -0.234804, -0.241147, /*               LATANoWordNet d01:  0.345107 */
	/*              tyCorPassageSp @,%,! */  1.226210,  0.083419,  0.121295, /*              tyCorPassageSp d01:  1.188334 */
	/*            tyCorPassageDist @,%,! */ -0.261734, -0.087018,  0.121295, /*            tyCorPassageDist d01: -0.470048 */
	/*          tyCorPassageInside @,%,! */  0.375918, -0.037529, -0.278301, /*          tyCorPassageInside d01:  0.616689 */
	/*                 simpleScore @,%,! */  0.005558,  0.126464,  0.000000, /*                 simpleScore d01:  0.132022 */
	/*                       LATNE @,%,! */ -0.185997,  0.206334,  0.283614, /*                       LATNE d01: -0.263277 */
	/*                  LATDBpType @,%,! */  0.726114, -0.709192, -0.628497, /*                  LATDBpType d01:  0.645419 */
	/*                 LATQuantity @,%,! */ -0.173194, -0.108946,  0.270811, /*                 LATQuantity d01: -0.552952 */
	/*               LATQuantityCD @,%,! */  0.609216, -0.201103, -0.511599, /*               LATQuantityCD d01:  0.919713 */
	/*               LATWnInstance @,%,! */  0.477144, -0.234521, -0.379527, /*               LATWnInstance d01:  0.622151 */
	/*              LATDBpRelation @,%,! */  0.055677,  0.007341,  0.041940, /*              LATDBpRelation d01:  0.021078 */
	/*                 tyCorSpQHit @,%,! */  0.573119,  0.017133, -0.475502, /*                 tyCorSpQHit d01:  1.065754 */
	/*                 tyCorSpAHit @,%,! */ -0.093248, -0.391828,  0.190864, /*                 tyCorSpAHit d01: -0.675940 */
	/*                    tyCorANE @,%,! */  1.299411, -0.191921, -1.201794, /*                    tyCorANE d01:  2.309283 */
	/*                   tyCorADBp @,%,! */  0.957773, -0.177076, -0.860156, /*                   tyCorADBp d01:  1.640854 */
	/*              tyCorAQuantity @,%,! */ -0.052677,  0.057730,  0.150294, /*              tyCorAQuantity d01: -0.145240 */
	/*            tyCorAQuantityCD @,%,! */ -0.452174,  0.655878,  0.549791, /*            tyCorAQuantityCD d01: -0.346086 */
	/*            tyCorAWnInstance @,%,! */ -0.741618,  0.377763,  0.839235, /*            tyCorAWnInstance d01: -1.203089 */
	/*           tyCorADBpRelation @,%,! */ -0.596907,  0.282247,  0.694524, /*           tyCorADBpRelation d01: -1.009184 */
	/*                   topAnswer @,%,! */  0.000000,  0.000000,  0.097617, /*                   topAnswer d01: -0.097617 */
	/*                  solrHitsEv @,%,! */  0.000000,  0.000000,  0.097617, /*                  solrHitsEv d01: -0.097617 */
	/*                 solrAHitsEv @,%,! */  0.000000,  0.000000,  0.097617, /*                 solrAHitsEv d01: -0.097617 */
	/*             solrHitsANormEv @,%,! */  0.000000,  0.000000,  0.097617, /*             solrHitsANormEv d01: -0.097617 */
	/*              solrMaxScoreEv @,%,! */  0.000000,  0.000000,  0.097617, /*              solrMaxScoreEv d01: -0.097617 */
	/*          solrHitsMaxScoreEv @,%,! */  0.000000,  0.000000,  0.097617, /*          solrHitsMaxScoreEv d01: -0.097617 */
	/*                 phase0Score @,%,! */  0.000000,  0.000000,  0.097617, /*                 phase0Score d01: -0.097617 */
	/*                 phase1Score @,%,! */  0.000000,  0.000000,  0.097617, /*                 phase1Score d01: -0.097617 */
/* intercept */ 0.097617
