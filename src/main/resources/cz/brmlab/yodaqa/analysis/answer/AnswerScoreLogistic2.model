/// The weights of individual elements of the FV.  These weights
// are output by data/ml/answer-train.py as this:
//
// 430 answersets, 41016 answers
// + Cross-validation:
// (test) PERANS acc/prec/rcl/F2 = 0.861/0.037/0.718/0.152, @70 prec/rcl/F2 = 0.053/0.550/0.190, PERQ avail 0.693, any good = [0.482], simple 0.369
// (test) PERANS acc/prec/rcl/F2 = 0.858/0.038/0.758/0.157, @70 prec/rcl/F2 = 0.059/0.624/0.215, PERQ avail 0.693, any good = [0.554], simple 0.438
// (test) PERANS acc/prec/rcl/F2 = 0.863/0.042/0.776/0.172, @70 prec/rcl/F2 = 0.064/0.609/0.225, PERQ avail 0.726, any good = [0.571], simple 0.437
// (test) PERANS acc/prec/rcl/F2 = 0.876/0.039/0.669/0.159, @70 prec/rcl/F2 = 0.054/0.500/0.189, PERQ avail 0.716, any good = [0.430], simple 0.402
// (test) PERANS acc/prec/rcl/F2 = 0.867/0.040/0.740/0.165, @70 prec/rcl/F2 = 0.063/0.640/0.226, PERQ avail 0.698, any good = [0.577], simple 0.432
// (test) PERANS acc/prec/rcl/F2 = 0.864/0.044/0.778/0.178, @70 prec/rcl/F2 = 0.070/0.654/0.246, PERQ avail 0.753, any good = [0.556], simple 0.466
// (test) PERANS acc/prec/rcl/F2 = 0.876/0.044/0.713/0.175, @70 prec/rcl/F2 = 0.065/0.537/0.218, PERQ avail 0.744, any good = [0.487], simple 0.443
// (test) PERANS acc/prec/rcl/F2 = 0.852/0.040/0.791/0.166, @70 prec/rcl/F2 = 0.062/0.703/0.228, PERQ avail 0.735, any good = [0.589], simple 0.487
// (test) PERANS acc/prec/rcl/F2 = 0.872/0.041/0.771/0.169, @70 prec/rcl/F2 = 0.066/0.653/0.235, PERQ avail 0.670, any good = [0.562], simple 0.436
// (test) PERANS acc/prec/rcl/F2 = 0.862/0.038/0.747/0.156, @70 prec/rcl/F2 = 0.060/0.630/0.216, PERQ avail 0.679, any good = [0.550], simple 0.439
// Cross-validation score mean 53.576% S.D. 4.865%
// + Full training set:
// (full) PERANS acc/prec/rcl/F2 = 0.857/1.000/0.148/0.178, @70 prec/rcl/F2 = 1.000/0.085/0.104, PERQ avail 0.714, any good = [0.589], simple 0.440
// Full model is LogisticRegression(C=1.0, class_weight='auto', dual=False, fit_intercept=True,           intercept_scaling=1, penalty='l2', random_state=None, tol=0.0001)
//
	/*                  occurences @,%,! */ -0.106347, -0.081353,  0.000000, /*                  occurences d01: -0.187700 */
	/*              resultLogScore @,%,! */  0.019118, -0.079930,  0.000000, /*              resultLogScore d01: -0.060812 */
	/*             passageLogScore @,%,! */  0.090433,  0.015012,  0.105868, /*             passageLogScore d01: -0.000423 */
	/*                   originPsg @,%,! */ -0.187833,  0.095175,  0.105868, /*                   originPsg d01: -0.198527 */
	/*              originPsgFirst @,%,! */ -0.017021, -0.062342, -0.064943, /*              originPsgFirst d01: -0.014420 */
	/*                 originPsgNP @,%,! */  0.458739, -0.174508, -0.540704, /*                 originPsgNP d01:  0.824936 */
	/*                 originPsgNE @,%,! */ -0.093873,  0.081553,  0.011908, /*                 originPsgNE d01: -0.024228 */
	/*        originPsgNPByLATSubj @,%,! */  0.320087, -0.037096, -0.402052, /*        originPsgNPByLATSubj d01:  0.685043 */
	/*           originPsgSurprise @,%,! */  0.094419, -0.238736, -0.176384, /*           originPsgSurprise d01:  0.032068 */
	/*              originDocTitle @,%,! */  0.207555, -0.061784, -0.289519, /*              originDocTitle d01:  0.435290 */
	/*           originDBpRelation @,%,! */  0.183953, -0.053890, -0.265918, /*           originDBpRelation d01:  0.395981 */
	/*               originConcept @,%,! */ -0.179095,  0.208437,  0.097130, /*               originConcept d01: -0.067788 */
	/*      originConceptBySubject @,%,! */ -0.023175,  0.094512, -0.058790, /*      originConceptBySubject d01:  0.130127 */
	/*          originConceptByLAT @,%,! */ -0.054294, -0.047974, -0.027671, /*          originConceptByLAT d01: -0.074597 */
	/*           originConceptByNE @,%,! */ -0.207092,  0.045463,  0.125127, /*           originConceptByNE d01: -0.286757 */
	/*              originMultiple @,%,! */ -0.071903, -0.057602, -0.010062, /*              originMultiple d01: -0.119443 */
	/*                   spWordNet @,%,! */ -0.110536,  0.043785,  0.040415, /*                   spWordNet d01: -0.107166 */
	/*               LATQNoWordNet @,%,! */ -0.097142,  0.000000,  0.015177, /*               LATQNoWordNet d01: -0.112319 */
	/*               LATANoWordNet @,%,! */ -0.019402,  0.083908, -0.062563, /*               LATANoWordNet d01:  0.127069 */
	/*              tyCorPassageSp @,%,! */  0.505556,  0.017142,  0.052601, /*              tyCorPassageSp d01:  0.470098 */
	/*            tyCorPassageDist @,%,! */ -0.002716, -0.238763,  0.052601, /*            tyCorPassageDist d01: -0.294080 */
	/*          tyCorPassageInside @,%,! */ -0.198589,  0.180239,  0.116624, /*          tyCorPassageInside d01: -0.134974 */
	/*                 simpleScore @,%,! */  0.024682,  0.187169,  0.000000, /*                 simpleScore d01:  0.211851 */
	/*                       LATNE @,%,! */ -0.198857,  0.182616,  0.116893, /*                       LATNE d01: -0.133134 */
	/*                  LATDBpType @,%,! */  0.086898, -0.161338, -0.168863, /*                  LATDBpType d01:  0.094422 */
	/*                 LATQuantity @,%,! */ -0.005935, -0.063761, -0.076030, /*                 LATQuantity d01:  0.006334 */
	/*               LATQuantityCD @,%,! */  0.106540, -0.087846, -0.188505, /*               LATQuantityCD d01:  0.207199 */
	/*               LATWnInstance @,%,! */  0.168232, -0.029239, -0.250197, /*               LATWnInstance d01:  0.389191 */
	/*              LATDBpRelation @,%,! */  0.183953, -0.053890, -0.265918, /*              LATDBpRelation d01:  0.395981 */
	/*                 tyCorSpQHit @,%,! */ -0.018984,  0.140989, -0.062981, /*                 tyCorSpQHit d01:  0.184985 */
	/*                 tyCorSpAHit @,%,! */ -0.366580, -0.037909,  0.284615, /*                 tyCorSpAHit d01: -0.689104 */
	/*                    tyCorANE @,%,! */  0.027988,  0.205474, -0.109953, /*                    tyCorANE d01:  0.343416 */
	/*                   tyCorADBp @,%,! */  0.208387,  0.074837, -0.290352, /*                   tyCorADBp d01:  0.573576 */
	/*              tyCorAQuantity @,%,! */ -0.000888,  0.001722, -0.081077, /*              tyCorAQuantity d01:  0.081911 */
	/*            tyCorAQuantityCD @,%,! */  0.287514,  0.042301, -0.369478, /*            tyCorAQuantityCD d01:  0.699293 */
	/*            tyCorAWnInstance @,%,! */ -0.293681,  0.097996,  0.211716, /*            tyCorAWnInstance d01: -0.407402 */
	/*           tyCorADBpRelation @,%,! */ -0.086626,  0.188069,  0.004662, /*           tyCorADBpRelation d01:  0.096781 */
	/*                   topAnswer @,%,! */ -0.093951,  0.008072,  0.011987, /*                   topAnswer d01: -0.097866 */
	/*                  solrHitsEv @,%,! */ -0.002755, -0.343180,  0.011987, /*                  solrHitsEv d01: -0.357922 */
	/*              solrMaxScoreEv @,%,! */ -0.289163,  0.039887,  0.011987, /*              solrMaxScoreEv d01: -0.261262 */
	/*          solrHitsMaxScoreEv @,%,! */  0.001073,  0.327667,  0.011987, /*          solrHitsMaxScoreEv d01:  0.316753 */
	/*                 phase0Score @,%,! */  0.758065, -0.425541,  0.000000, /*                 phase0Score d01:  0.332524 */
	/*                 phase1Score @,%,! */  0.580121,  1.249989,  0.000000, /*                 phase1Score d01:  1.830109 */
/* intercept */ -0.081965
