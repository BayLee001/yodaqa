/// The weights of individual elements of the FV.  These weights
// are output by data/ml/answer-train.py as this:
//
// 430 answersets, 40970 answers
// + Cross-validation:
// (test) PERANS acc/prec/rcl/F2 = 0.876/0.040/0.675/0.163, @70 prec/rcl/F2 = 0.073/0.565/0.242, PERQ avail 0.716, any good = [0.580], simple 0.521
// (test) PERANS acc/prec/rcl/F2 = 0.862/0.035/0.690/0.144, @70 prec/rcl/F2 = 0.063/0.572/0.219, PERQ avail 0.674, any good = [0.547], simple 0.475
// (test) PERANS acc/prec/rcl/F2 = 0.858/0.036/0.704/0.149, @70 prec/rcl/F2 = 0.067/0.559/0.226, PERQ avail 0.707, any good = [0.566], simple 0.518
// (test) PERANS acc/prec/rcl/F2 = 0.873/0.036/0.629/0.147, @70 prec/rcl/F2 = 0.059/0.523/0.203, PERQ avail 0.702, any good = [0.455], simple 0.448
// (test) PERANS acc/prec/rcl/F2 = 0.876/0.039/0.650/0.159, @70 prec/rcl/F2 = 0.072/0.535/0.233, PERQ avail 0.730, any good = [0.550], simple 0.503
// (test) PERANS acc/prec/rcl/F2 = 0.867/0.034/0.605/0.140, @70 prec/rcl/F2 = 0.054/0.465/0.185, PERQ avail 0.730, any good = [0.478], simple 0.436
// (test) PERANS acc/prec/rcl/F2 = 0.871/0.036/0.629/0.145, @70 prec/rcl/F2 = 0.058/0.510/0.200, PERQ avail 0.702, any good = [0.503], simple 0.477
// (test) PERANS acc/prec/rcl/F2 = 0.868/0.036/0.671/0.149, @70 prec/rcl/F2 = 0.066/0.530/0.221, PERQ avail 0.693, any good = [0.530], simple 0.477
// (test) PERANS acc/prec/rcl/F2 = 0.884/0.040/0.616/0.160, @70 prec/rcl/F2 = 0.064/0.516/0.214, PERQ avail 0.740, any good = [0.509], simple 0.498
// (test) PERANS acc/prec/rcl/F2 = 0.882/0.036/0.599/0.145, @70 prec/rcl/F2 = 0.056/0.476/0.190, PERQ avail 0.684, any good = [0.476], simple 0.478
// Cross-validation score mean 51.945% S.D. 3.974%
// + Full training set:
// (full) PERANS acc/prec/rcl/F2 = 0.864/1.000/0.139/0.168, @70 prec/rcl/F2 = 1.000/0.064/0.079, PERQ avail 0.698, any good = [0.583], simple 0.471
// Full model is LogisticRegression(C=1.0, class_weight='auto', dual=False, fit_intercept=True,           intercept_scaling=1, penalty='l2', random_state=None, tol=0.0001)
//
	/*                  occurences @,%,! */ -0.104661,  0.091907,  0.000000, /*                  occurences d01: -0.012754 */
	/*              resultLogScore @,%,! */ -0.036635, -0.084323,  0.000000, /*              resultLogScore d01: -0.120958 */
	/*             passageLogScore @,%,! */  0.288295, -0.028128, -0.037112, /*             passageLogScore d01:  0.297279 */
	/*                   originPsg @,%,! */  0.057471, -0.045639, -0.037112, /*                   originPsg d01:  0.048944 */
	/*              originPsgFirst @,%,! */ -0.149031,  0.135077,  0.169391, /*              originPsgFirst d01: -0.183345 */
	/*                 originPsgNP @,%,! */  0.142700, -0.088330, -0.122341, /*                 originPsgNP d01:  0.176712 */
	/*                 originPsgNE @,%,! */  0.373077, -0.237935, -0.352718, /*                 originPsgNE d01:  0.487860 */
	/*        originPsgNPByLATSubj @,%,! */  0.424164, -0.148987, -0.403805, /*        originPsgNPByLATSubj d01:  0.678982 */
	/*           originPsgSurprise @,%,! */ -0.015617,  0.040818,  0.035976, /*           originPsgSurprise d01: -0.010774 */
	/*              originDocTitle @,%,! */ -0.123209,  0.122137,  0.143568, /*              originDocTitle d01: -0.144640 */
	/*           originDBpRelation @,%,! */  0.105024,  0.018577, -0.084665, /*           originDBpRelation d01:  0.208267 */
	/*               originConcept @,%,! */ -0.096248,  0.150801,  0.116608, /*               originConcept d01: -0.062055 */
	/*      originConceptBySubject @,%,! */  0.061268,  0.149262, -0.040909, /*      originConceptBySubject d01:  0.251440 */
	/*          originConceptByLAT @,%,! */  0.328975, -0.202021, -0.308616, /*          originConceptByLAT d01:  0.435570 */
	/*           originConceptByNE @,%,! */  0.053175, -0.113536, -0.032816, /*           originConceptByNE d01: -0.027545 */
	/*              originMultiple @,%,! */  0.187735,  0.012138, -0.167376, /*              originMultiple d01:  0.367249 */
	/*                   spWordNet @,%,! */ -0.029667, -0.036149, -0.343273, /*                   spWordNet d01:  0.277456 */
	/*               LATQNoWordNet @,%,! */ -0.058701,  0.000000,  0.079060, /*               LATQNoWordNet d01: -0.137762 */
	/*               LATANoWordNet @,%,! */  0.077676,  0.089080, -0.057317, /*               LATANoWordNet d01:  0.224073 */
	/*              tyCorPassageSp @,%,! */  0.141984,  0.270975,  0.018561, /*              tyCorPassageSp d01:  0.394398 */
	/*            tyCorPassageDist @,%,! */  0.425609, -0.608094,  0.018561, /*            tyCorPassageDist d01: -0.201046 */
	/*          tyCorPassageInside @,%,! */ -0.107224,  0.220661,  0.127583, /*          tyCorPassageInside d01: -0.014146 */
	/*                 simpleScore @,%,! */  0.011085,  0.091649,  0.000000, /*                 simpleScore d01:  0.102734 */
	/*                       LATNE @,%,! */ -0.144034,  0.188848,  0.164393, /*                       LATNE d01: -0.119579 */
	/*                  LATDBpType @,%,! */  0.130248, -0.068026, -0.109889, /*                  LATDBpType d01:  0.172111 */
	/*                 LATQuantity @,%,! */ -0.006956, -0.071832,  0.027315, /*                 LATQuantity d01: -0.106102 */
	/*               LATQuantityCD @,%,! */  0.142295, -0.125662, -0.121936, /*               LATQuantityCD d01:  0.138569 */
	/*               LATWnInstance @,%,! */  0.045458,  0.048620, -0.025099, /*               LATWnInstance d01:  0.119177 */
	/*              LATDBpRelation @,%,! */  0.105024,  0.018577, -0.084665, /*              LATDBpRelation d01:  0.208267 */
	/*                 tyCorSpQHit @,%,! */  0.113263,  0.196524, -0.092904, /*                 tyCorSpQHit d01:  0.402691 */
	/*                 tyCorSpAHit @,%,! */ -0.204363, -0.103128,  0.224723, /*                 tyCorSpAHit d01: -0.532214 */
	/*                    tyCorANE @,%,! */ -0.022212,  0.037077,  0.042571, /*                    tyCorANE d01: -0.027706 */
	/*                   tyCorADBp @,%,! */  0.044736,  0.037219, -0.024377, /*                   tyCorADBp d01:  0.106333 */
	/*              tyCorAQuantity @,%,! */ -0.001475, -0.032818,  0.021834, /*              tyCorAQuantity d01: -0.056127 */
	/*            tyCorAQuantityCD @,%,! */  0.407081, -0.020500, -0.386722, /*            tyCorAQuantityCD d01:  0.773303 */
	/*            tyCorAWnInstance @,%,! */ -0.177114,  0.189442,  0.197473, /*            tyCorAWnInstance d01: -0.185145 */
	/*           tyCorADBpRelation @,%,! */ -0.089676,  0.061207,  0.110035, /*           tyCorADBpRelation d01: -0.138505 */
	/*                   topAnswer @,%,! */  0.003746, -0.080651,  0.016613, /*                   topAnswer d01: -0.093518 */
	/*                  solrHitsEv @,%,! */  0.004275,  0.215287,  0.098518, /*                  solrHitsEv d01:  0.121044 */
	/*                 solrAHitsEv @,%,! */ -0.000012,  0.005536, -0.575522, /*                 solrAHitsEv d01:  0.581046 */
	/*             solrHitsANormEv @,%,! */  0.015912, -0.014165, -0.054271, /*             solrHitsANormEv d01:  0.056018 */
	/*              solrMaxScoreEv @,%,! */  0.044716,  0.143539,  0.098518, /*              solrMaxScoreEv d01:  0.089736 */
	/*          solrHitsMaxScoreEv @,%,! */ -0.001748,  0.013786,  0.098518, /*          solrHitsMaxScoreEv d01: -0.086481 */
	/*                 phase0Score @,%,! */ -0.220078, -0.011469,  0.000000, /*                 phase0Score d01: -0.231547 */
	/*                 phase1Score @,%,! */  0.361994,  0.746565,  0.000000, /*                 phase1Score d01:  1.108559 */
/* intercept */ 0.020359
