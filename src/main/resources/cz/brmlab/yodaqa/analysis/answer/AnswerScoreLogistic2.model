/// The weights of individual elements of the FV.  These weights
// are output by data/ml/answer-train.py as this:
//
// 430 answersets, 40960 answers
// + Cross-validation:
// (test) PERANS acc/prec/rcl/F2 = 0.867/0.041/0.742/0.169, @70 prec/rcl/F2 = 0.065/0.626/0.228, PERQ avail 0.721, any good = [0.596], simple 0.436
// (test) PERANS acc/prec/rcl/F2 = 0.857/0.035/0.739/0.147, @70 prec/rcl/F2 = 0.058/0.655/0.215, PERQ avail 0.660, any good = [0.592], simple 0.476
// (test) PERANS acc/prec/rcl/F2 = 0.864/0.040/0.737/0.163, @70 prec/rcl/F2 = 0.066/0.658/0.235, PERQ avail 0.707, any good = [0.615], simple 0.476
// (test) PERANS acc/prec/rcl/F2 = 0.871/0.039/0.709/0.159, @70 prec/rcl/F2 = 0.058/0.581/0.206, PERQ avail 0.688, any good = [0.547], simple 0.443
// (test) PERANS acc/prec/rcl/F2 = 0.845/0.036/0.810/0.154, @70 prec/rcl/F2 = 0.058/0.680/0.217, PERQ avail 0.684, any good = [0.560], simple 0.491
// (test) PERANS acc/prec/rcl/F2 = 0.852/0.039/0.807/0.162, @70 prec/rcl/F2 = 0.064/0.600/0.225, PERQ avail 0.698, any good = [0.571], simple 0.489
// (test) PERANS acc/prec/rcl/F2 = 0.874/0.041/0.704/0.165, @70 prec/rcl/F2 = 0.066/0.572/0.225, PERQ avail 0.707, any good = [0.561], simple 0.433
// (test) PERANS acc/prec/rcl/F2 = 0.855/0.036/0.724/0.151, @70 prec/rcl/F2 = 0.057/0.625/0.208, PERQ avail 0.707, any good = [0.576], simple 0.510
// (test) PERANS acc/prec/rcl/F2 = 0.877/0.042/0.720/0.170, @70 prec/rcl/F2 = 0.068/0.573/0.230, PERQ avail 0.698, any good = [0.572], simple 0.464
// (test) PERANS acc/prec/rcl/F2 = 0.865/0.041/0.740/0.166, @70 prec/rcl/F2 = 0.060/0.636/0.218, PERQ avail 0.716, any good = [0.566], simple 0.494
// Cross-validation score mean 57.547% S.D. 1.893%
// + Full training set:
// (full) PERANS acc/prec/rcl/F2 = 0.859/1.000/0.146/0.176, @70 prec/rcl/F2 = 1.000/0.078/0.095, PERQ avail 0.698, any good = [0.615], simple 0.469
// Full model is LogisticRegression(C=1.0, class_weight='auto', dual=False, fit_intercept=True,           intercept_scaling=1, penalty='l2', random_state=None, tol=0.0001)
//
	/*                  occurences @,%,! */ -0.173034,  0.015724,  0.000000, /*                  occurences d01: -0.157310 */
	/*              resultLogScore @,%,! */  0.052302, -0.240806,  0.000000, /*              resultLogScore d01: -0.188504 */
	/*             passageLogScore @,%,! */ -0.171111,  0.281158, -0.135569, /*             passageLogScore d01:  0.245615 */
	/*                   originPsg @,%,! */  0.124521, -0.183569, -0.135569, /*                   originPsg d01:  0.076521 */
	/*              originPsgFirst @,%,! */ -0.326272,  0.139167,  0.315225, /*              originPsgFirst d01: -0.502330 */
	/*                 originPsgNP @,%,! */  0.174813, -0.248201, -0.185861, /*                 originPsgNP d01:  0.112473 */
	/*                 originPsgNE @,%,! */ -0.064147, -0.140192,  0.053099, /*                 originPsgNE d01: -0.257439 */
	/*        originPsgNPByLATSubj @,%,! */  0.485113,  0.013246, -0.496161, /*        originPsgNPByLATSubj d01:  0.994520 */
	/*           originPsgSurprise @,%,! */  0.205562,  0.050672, -0.216609, /*           originPsgSurprise d01:  0.472843 */
	/*              originDocTitle @,%,! */ -0.057561,  0.257410,  0.046513, /*              originDocTitle d01:  0.153336 */
	/*           originDBpRelation @,%,! */  0.031772,  0.080089, -0.042820, /*           originDBpRelation d01:  0.154680 */
	/*               originConcept @,%,! */ -0.241178,  0.354385,  0.230131, /*               originConcept d01: -0.116924 */
	/*      originConceptBySubject @,%,! */ -0.053624,  0.271884,  0.042576, /*      originConceptBySubject d01:  0.175684 */
	/*          originConceptByLAT @,%,! */  0.397885, -0.150106, -0.408933, /*          originConceptByLAT d01:  0.656712 */
	/*           originConceptByNE @,%,! */ -0.054186,  0.105099,  0.043139, /*           originConceptByNE d01:  0.007775 */
	/*              originMultiple @,%,! */ -0.092816,  0.140755,  0.081768, /*              originMultiple d01: -0.033829 */
	/*                   spWordNet @,%,! */ -0.297985,  0.041418, -0.352350, /*                   spWordNet d01:  0.095783 */
	/*               LATQNoWordNet @,%,! */ -0.141340,  0.000000,  0.130292, /*               LATQNoWordNet d01: -0.271632 */
	/*               LATANoWordNet @,%,! */ -0.053292,  0.160996,  0.042244, /*               LATANoWordNet d01:  0.065461 */
	/*              tyCorPassageSp @,%,! */  0.566045,  0.314251,  0.027178, /*              tyCorPassageSp d01:  0.853117 */
	/*            tyCorPassageDist @,%,! */ -0.316005, -0.407831,  0.027178, /*            tyCorPassageDist d01: -0.751015 */
	/*          tyCorPassageInside @,%,! */ -0.075316,  0.172588,  0.064268, /*          tyCorPassageInside d01:  0.033005 */
	/*                 simpleScore @,%,! */  0.017512,  0.222703,  0.000000, /*                 simpleScore d01:  0.240215 */
	/*                       LATNE @,%,! */ -0.087652,  0.281706,  0.076605, /*                       LATNE d01:  0.117449 */
	/*                  LATDBpType @,%,! */ -0.017586,  0.018716,  0.006538, /*                  LATDBpType d01: -0.005408 */
	/*                 LATQuantity @,%,! */ -0.005886, -0.089137, -0.005162, /*                 LATQuantity d01: -0.089861 */
	/*               LATQuantityCD @,%,! */  0.114659, -0.055287, -0.125707, /*               LATQuantityCD d01:  0.185078 */
	/*               LATWnInstance @,%,! */  0.147091, -0.046324, -0.158138, /*               LATWnInstance d01:  0.258906 */
	/*              LATDBpRelation @,%,! */  0.031772,  0.080089, -0.042820, /*              LATDBpRelation d01:  0.154680 */
	/*                 tyCorSpQHit @,%,! */  0.229385,  0.034743, -0.240432, /*                 tyCorSpQHit d01:  0.504560 */
	/*                 tyCorSpAHit @,%,! */ -0.261703, -0.250986,  0.250655, /*                 tyCorSpAHit d01: -0.763344 */
	/*                    tyCorANE @,%,! */  0.121770,  0.055164, -0.132817, /*                    tyCorANE d01:  0.309751 */
	/*                   tyCorADBp @,%,! */  0.141531,  0.096585, -0.152578, /*                   tyCorADBp d01:  0.390694 */
	/*              tyCorAQuantity @,%,! */ -0.000783,  0.000890, -0.010264, /*              tyCorAQuantity d01:  0.010371 */
	/*            tyCorAQuantityCD @,%,! */  0.334882,  0.047145, -0.345930, /*            tyCorAQuantityCD d01:  0.727957 */
	/*            tyCorAWnInstance @,%,! */ -0.340891,  0.233903,  0.329843, /*            tyCorAWnInstance d01: -0.436831 */
	/*           tyCorADBpRelation @,%,! */ -0.213072,  0.271208,  0.202025, /*           tyCorADBpRelation d01: -0.143889 */
	/*                   topAnswer @,%,! */ -0.012317, -0.032186,  0.001269, /*                   topAnswer d01: -0.045772 */
	/*                  solrHitsEv @,%,! */ -0.001150, -0.008881,  0.001269, /*                  solrHitsEv d01: -0.011301 */
	/*              solrMaxScoreEv @,%,! */ -0.220763,  0.110473,  0.001269, /*              solrMaxScoreEv d01: -0.111559 */
	/*          solrHitsMaxScoreEv @,%,! */  0.000692, -0.013115,  0.001269, /*          solrHitsMaxScoreEv d01: -0.013692 */
	/*                 phase0Score @,%,! */ -0.603491,  0.186663,  0.000000, /*                 phase0Score d01: -0.416829 */
	/*                 phase1Score @,%,! */  0.035684,  0.898284,  0.000000, /*                 phase1Score d01:  0.933968 */
/* intercept */ -0.011048
