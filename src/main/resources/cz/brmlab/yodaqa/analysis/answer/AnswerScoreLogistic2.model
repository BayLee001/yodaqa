/// The weights of individual elements of the FV.  These weights
// are output by data/ml/answer-train.py as this:
//
// 430 answersets, 40970 answers
// + Cross-validation:
// (test) PERANS acc/prec/rcl/F2 = 0.886/0.048/0.725/0.190, @70 prec/rcl/F2 = 0.071/0.600/0.240, PERQ avail 0.744, any good = [0.588], simple 0.462
// (test) PERANS acc/prec/rcl/F2 = 0.864/0.041/0.797/0.171, @70 prec/rcl/F2 = 0.066/0.669/0.237, PERQ avail 0.688, any good = [0.655], simple 0.494
// (test) PERANS acc/prec/rcl/F2 = 0.881/0.047/0.752/0.188, @70 prec/rcl/F2 = 0.074/0.662/0.257, PERQ avail 0.730, any good = [0.624], simple 0.491
// (test) PERANS acc/prec/rcl/F2 = 0.882/0.043/0.729/0.172, @70 prec/rcl/F2 = 0.064/0.646/0.230, PERQ avail 0.670, any good = [0.608], simple 0.482
// (test) PERANS acc/prec/rcl/F2 = 0.879/0.044/0.721/0.175, @70 prec/rcl/F2 = 0.073/0.649/0.252, PERQ avail 0.716, any good = [0.588], simple 0.445
// (test) PERANS acc/prec/rcl/F2 = 0.890/0.046/0.686/0.183, @70 prec/rcl/F2 = 0.074/0.564/0.242, PERQ avail 0.726, any good = [0.548], simple 0.445
// (test) PERANS acc/prec/rcl/F2 = 0.866/0.043/0.799/0.178, @70 prec/rcl/F2 = 0.069/0.688/0.246, PERQ avail 0.716, any good = [0.584], simple 0.503
// (test) PERANS acc/prec/rcl/F2 = 0.893/0.044/0.649/0.174, @70 prec/rcl/F2 = 0.064/0.550/0.219, PERQ avail 0.702, any good = [0.533], simple 0.402
// (test) PERANS acc/prec/rcl/F2 = 0.873/0.040/0.718/0.164, @70 prec/rcl/F2 = 0.061/0.638/0.221, PERQ avail 0.693, any good = [0.570], simple 0.465
// (test) PERANS acc/prec/rcl/F2 = 0.876/0.041/0.748/0.168, @70 prec/rcl/F2 = 0.066/0.685/0.238, PERQ avail 0.665, any good = [0.615], simple 0.459
// Cross-validation score mean 59.139% S.D. 3.435%
// + Full training set:
// (full) PERANS acc/prec/rcl/F2 = 0.870/1.000/0.134/0.162, @70 prec/rcl/F2 = 1.000/0.074/0.091, PERQ avail 0.698, any good = [0.632], simple 0.474
// Full model is LogisticRegression(C=1.0, class_weight='auto', dual=False, fit_intercept=True,           intercept_scaling=1, penalty='l2', random_state=None, tol=0.0001)
//
	/*                  occurences @,%,! */ -0.115368,  0.056383,  0.000000, /*                  occurences d01: -0.058985 */
	/*              resultLogScore @,%,! */  0.092465, -0.177722,  0.000000, /*              resultLogScore d01: -0.085257 */
	/*             passageLogScore @,%,! */  0.148126,  0.021144, -0.010677, /*             passageLogScore d01:  0.179948 */
	/*                   originPsg @,%,! */ -0.041160, -0.176868, -0.010677, /*                   originPsg d01: -0.207350 */
	/*              originPsgFirst @,%,! */ -0.104149, -0.043123,  0.052312, /*              originPsgFirst d01: -0.199584 */
	/*                 originPsgNP @,%,! */  0.100507, -0.207600, -0.152344, /*                 originPsgNP d01:  0.045251 */
	/*                 originPsgNE @,%,! */  0.098938, -0.199911, -0.150775, /*                 originPsgNE d01:  0.049802 */
	/*        originPsgNPByLATSubj @,%,! */  0.418059, -0.055800, -0.469896, /*        originPsgNPByLATSubj d01:  0.832155 */
	/*           originPsgSurprise @,%,! */  0.153776,  0.061340, -0.205613, /*           originPsgSurprise d01:  0.420729 */
	/*              originDocTitle @,%,! */ -0.187704,  0.177854,  0.135867, /*              originDocTitle d01: -0.145717 */
	/*           originDBpRelation @,%,! */  0.071630,  0.000624, -0.123467, /*           originDBpRelation d01:  0.195722 */
	/*               originConcept @,%,! */ -0.252003,  0.170864,  0.200166, /*               originConcept d01: -0.281305 */
	/*      originConceptBySubject @,%,! */  0.084316,  0.151271, -0.136153, /*      originConceptBySubject d01:  0.371740 */
	/*          originConceptByLAT @,%,! */  0.281011, -0.204781, -0.332848, /*          originConceptByLAT d01:  0.409078 */
	/*           originConceptByNE @,%,! */ -0.013732, -0.002799, -0.038105, /*           originConceptByNE d01:  0.021574 */
	/*              originMultiple @,%,! */ -0.317703,  0.192452,  0.265866, /*              originMultiple d01: -0.391117 */
	/*                   spWordNet @,%,! */ -0.227486,  0.064095, -0.249559, /*                   spWordNet d01:  0.086168 */
	/*               LATQNoWordNet @,%,! */ -0.076917,  0.000000,  0.025080, /*               LATQNoWordNet d01: -0.101997 */
	/*               LATANoWordNet @,%,! */ -0.014119,  0.262382, -0.037718, /*               LATANoWordNet d01:  0.285980 */
	/*              tyCorPassageSp @,%,! */  0.517962,  0.113688,  0.023154, /*              tyCorPassageSp d01:  0.608495 */
	/*            tyCorPassageDist @,%,! */ -0.028028, -0.664785,  0.023154, /*            tyCorPassageDist d01: -0.715967 */
	/*          tyCorPassageInside @,%,! */ -0.124843,  0.486612,  0.073006, /*          tyCorPassageInside d01:  0.288763 */
	/*                 simpleScore @,%,! */  0.019910,  0.216055,  0.000000, /*                 simpleScore d01:  0.235965 */
	/*                       LATNE @,%,! */ -0.027141,  0.170553, -0.024696, /*                       LATNE d01:  0.168108 */
	/*                  LATDBpType @,%,! */  0.051737, -0.071548, -0.103574, /*                  LATDBpType d01:  0.083764 */
	/*                 LATQuantity @,%,! */ -0.006765, -0.099339, -0.045072, /*                 LATQuantity d01: -0.061032 */
	/*               LATQuantityCD @,%,! */  0.247770, -0.155919, -0.299607, /*               LATQuantityCD d01:  0.391458 */
	/*               LATWnInstance @,%,! */  0.110603,  0.128037, -0.162440, /*               LATWnInstance d01:  0.401081 */
	/*              LATDBpRelation @,%,! */  0.071630,  0.000624, -0.123467, /*              LATDBpRelation d01:  0.195722 */
	/*                 tyCorSpQHit @,%,! */  0.063871,  0.103065, -0.115708, /*                 tyCorSpQHit d01:  0.282644 */
	/*                 tyCorSpAHit @,%,! */ -0.096451, -0.449120,  0.044614, /*                 tyCorSpAHit d01: -0.590186 */
	/*                    tyCorANE @,%,! */ -0.028763,  0.162053, -0.023074, /*                    tyCorANE d01:  0.156365 */
	/*                   tyCorADBp @,%,! */  0.086587,  0.145118, -0.138424, /*                   tyCorADBp d01:  0.370129 */
	/*              tyCorAQuantity @,%,! */ -0.000802, -0.038654, -0.051035, /*              tyCorAQuantity d01:  0.011578 */
	/*            tyCorAQuantityCD @,%,! */  0.514383, -0.057970, -0.566220, /*            tyCorAQuantityCD d01:  1.022633 */
	/*            tyCorAWnInstance @,%,! */ -0.215777,  0.203765,  0.163940, /*            tyCorAWnInstance d01: -0.175952 */
	/*           tyCorADBpRelation @,%,! */ -0.049193,  0.108683, -0.002644, /*           tyCorADBpRelation d01:  0.062134 */
	/*                   topAnswer @,%,! */ -0.035543, -0.035421, -0.016294, /*                   topAnswer d01: -0.054670 */
	/*                  solrHitsEv @,%,! */  0.032342,  0.148362,  0.287746, /*                  solrHitsEv d01: -0.107042 */
	/*                 solrAHitsEv @,%,! */ -0.000015, -0.056430, -0.467249, /*                 solrAHitsEv d01:  0.410805 */
	/*             solrHitsANormEv @,%,! */ -0.158013, -0.014069,  0.274202, /*             solrHitsANormEv d01: -0.446284 */
	/*              solrMaxScoreEv @,%,! */  0.089604,  0.242108,  0.287746, /*              solrMaxScoreEv d01:  0.043967 */
	/*          solrHitsMaxScoreEv @,%,! */ -0.015555, -0.081569,  0.287746, /*          solrHitsMaxScoreEv d01: -0.384870 */
	/*                 phase0Score @,%,! */ -0.463662, -0.155173,  0.000000, /*                 phase0Score d01: -0.618835 */
	/*                 phase1Score @,%,! */  0.483525,  1.162549,  0.000000, /*                 phase1Score d01:  1.646074 */
/* intercept */ -0.051837
