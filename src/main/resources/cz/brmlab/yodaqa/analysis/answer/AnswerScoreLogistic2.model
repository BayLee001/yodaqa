/// The weights of individual elements of the FV.  These weights
// are output by data/ml/answer-train.py as this:
//
// 430 answersets, 40950 answers
// + Cross-validation:
// (test) PERANS acc/prec/rcl/F2 = 0.876/0.044/0.745/0.177, @70 prec/rcl/F2 = 0.066/0.634/0.233, PERQ avail 0.712, any good = [0.588], simple 0.435
// (test) PERANS acc/prec/rcl/F2 = 0.883/0.045/0.721/0.180, @70 prec/rcl/F2 = 0.076/0.636/0.257, PERQ avail 0.716, any good = [0.613], simple 0.418
// (test) PERANS acc/prec/rcl/F2 = 0.877/0.045/0.758/0.181, @70 prec/rcl/F2 = 0.070/0.627/0.243, PERQ avail 0.712, any good = [0.592], simple 0.497
// (test) PERANS acc/prec/rcl/F2 = 0.875/0.041/0.754/0.167, @70 prec/rcl/F2 = 0.066/0.648/0.234, PERQ avail 0.660, any good = [0.618], simple 0.494
// (test) PERANS acc/prec/rcl/F2 = 0.856/0.037/0.764/0.156, @70 prec/rcl/F2 = 0.062/0.635/0.223, PERQ avail 0.688, any good = [0.554], simple 0.491
// (test) PERANS acc/prec/rcl/F2 = 0.875/0.040/0.714/0.163, @70 prec/rcl/F2 = 0.068/0.626/0.237, PERQ avail 0.684, any good = [0.583], simple 0.437
// (test) PERANS acc/prec/rcl/F2 = 0.866/0.040/0.755/0.166, @70 prec/rcl/F2 = 0.065/0.682/0.236, PERQ avail 0.702, any good = [0.586], simple 0.457
// (test) PERANS acc/prec/rcl/F2 = 0.880/0.040/0.711/0.164, @70 prec/rcl/F2 = 0.066/0.585/0.226, PERQ avail 0.660, any good = [0.542], simple 0.490
// (test) PERANS acc/prec/rcl/F2 = 0.870/0.043/0.787/0.177, @70 prec/rcl/F2 = 0.066/0.653/0.236, PERQ avail 0.698, any good = [0.627], simple 0.537
// (test) PERANS acc/prec/rcl/F2 = 0.868/0.041/0.777/0.170, @70 prec/rcl/F2 = 0.065/0.642/0.231, PERQ avail 0.688, any good = [0.591], simple 0.456
// Cross-validation score mean 58.935% S.D. 2.500%
// + Full training set:
// (full) PERANS acc/prec/rcl/F2 = 0.872/1.000/0.133/0.161, @70 prec/rcl/F2 = 1.000/0.071/0.088, PERQ avail 0.700, any good = [0.635], simple 0.458
// Full model is LogisticRegression(C=1.0, class_weight='auto', dual=False, fit_intercept=True,           intercept_scaling=1, penalty='l2', random_state=None, tol=0.0001)
//
	/*                  occurences @,%,! */ -0.103820, -0.024432,  0.000000, /*                  occurences d01: -0.128253 */
	/*              resultLogScore @,%,! */  0.128760, -0.289870,  0.000000, /*              resultLogScore d01: -0.161109 */
	/*             passageLogScore @,%,! */  0.161955,  0.020463,  0.033133, /*             passageLogScore d01:  0.149284 */
	/*                   originPsg @,%,! */ -0.072940, -0.081141,  0.033133, /*                   originPsg d01: -0.187215 */
	/*              originPsgFirst @,%,! */ -0.138807, -0.020382,  0.099000, /*              originPsgFirst d01: -0.258189 */
	/*                 originPsgNP @,%,! */  0.115963, -0.175722, -0.155770, /*                 originPsgNP d01:  0.096012 */
	/*                 originPsgNE @,%,! */  0.170137, -0.204253, -0.209944, /*                 originPsgNE d01:  0.175828 */
	/*        originPsgNPByLATSubj @,%,! */  0.442817, -0.046417, -0.482624, /*        originPsgNPByLATSubj d01:  0.879023 */
	/*           originPsgSurprise @,%,! */  0.181751,  0.053609, -0.221559, /*           originPsgSurprise d01:  0.456919 */
	/*              originDocTitle @,%,! */ -0.216089,  0.238090,  0.176282, /*              originDocTitle d01: -0.154281 */
	/*           originDBpRelation @,%,! */  0.066858,  0.017087, -0.106665, /*           originDBpRelation d01:  0.190611 */
	/*               originConcept @,%,! */ -0.321470,  0.275199,  0.281663, /*               originConcept d01: -0.327933 */
	/*      originConceptBySubject @,%,! */  0.167603,  0.102282, -0.207410, /*      originConceptBySubject d01:  0.477294 */
	/*          originConceptByLAT @,%,! */  0.252463, -0.198929, -0.292270, /*          originConceptByLAT d01:  0.345803 */
	/*           originConceptByNE @,%,! */ -0.063654,  0.050387,  0.023847, /*           originConceptByNE d01: -0.037114 */
	/*              originMultiple @,%,! */ -0.013024, -0.014345, -0.026783, /*              originMultiple d01: -0.000585 */
	/*                   spWordNet @,%,! */ -0.259037,  0.042924, -0.263858, /*                   spWordNet d01:  0.047745 */
	/*               LATQNoWordNet @,%,! */ -0.111372,  0.000000,  0.071565, /*               LATQNoWordNet d01: -0.182937 */
	/*               LATANoWordNet @,%,! */ -0.065877,  0.222690,  0.026070, /*               LATANoWordNet d01:  0.130744 */
	/*              tyCorPassageSp @,%,! */  0.489515,  0.108827,  0.030082, /*              tyCorPassageSp d01:  0.568260 */
	/*            tyCorPassageDist @,%,! */ -0.148544, -0.682743,  0.030082, /*            tyCorPassageDist d01: -0.861369 */
	/*          tyCorPassageInside @,%,! */ -0.007158,  0.545449, -0.032649, /*          tyCorPassageInside d01:  0.570941 */
	/*                 simpleScore @,%,! */  0.015437,  0.254781,  0.000000, /*                 simpleScore d01:  0.270218 */
	/*                       LATNE @,%,! */ -0.072505,  0.193860,  0.032698, /*                       LATNE d01:  0.088657 */
	/*                  LATDBpType @,%,! */  0.038395,  0.012317, -0.078203, /*                  LATDBpType d01:  0.128915 */
	/*                 LATQuantity @,%,! */ -0.006842, -0.098198, -0.032965, /*                 LATQuantity d01: -0.072075 */
	/*               LATQuantityCD @,%,! */  0.304609, -0.207268, -0.344416, /*               LATQuantityCD d01:  0.441756 */
	/*               LATWnInstance @,%,! */  0.051692,  0.075659, -0.091499, /*               LATWnInstance d01:  0.218850 */
	/*              LATDBpRelation @,%,! */  0.066858,  0.017087, -0.106665, /*              LATDBpRelation d01:  0.190611 */
	/*                 tyCorSpQHit @,%,! */  0.028272,  0.147230, -0.068079, /*                 tyCorSpQHit d01:  0.243582 */
	/*                 tyCorSpAHit @,%,! */ -0.109924, -0.360191,  0.070117, /*                 tyCorSpAHit d01: -0.540232 */
	/*                    tyCorANE @,%,! */  0.019275,  0.045450, -0.059083, /*                    tyCorANE d01:  0.123808 */
	/*                   tyCorADBp @,%,! */  0.147467,  0.044928, -0.187274, /*                   tyCorADBp d01:  0.379669 */
	/*              tyCorAQuantity @,%,! */ -0.001259, -0.038528, -0.038548, /*              tyCorAQuantity d01: -0.001238 */
	/*            tyCorAQuantityCD @,%,! */  0.436067, -0.062099, -0.475874, /*            tyCorAQuantityCD d01:  0.849841 */
	/*            tyCorAWnInstance @,%,! */ -0.265556,  0.241296,  0.225749, /*            tyCorAWnInstance d01: -0.250008 */
	/*           tyCorADBpRelation @,%,! */ -0.069513,  0.158444,  0.029706, /*           tyCorADBpRelation d01:  0.059225 */
	/*                   topAnswer @,%,! */ -0.031159,  0.002536, -0.008648, /*                   topAnswer d01: -0.019975 */
	/*                  solrHitsEv @,%,! */  0.027779,  0.369323,  0.258085, /*                  solrHitsEv d01:  0.139017 */
	/*                 solrAHitsEv @,%,! */ -0.000014, -0.002458, -0.487121, /*                 solrAHitsEv d01:  0.484650 */
	/*             solrHitsANormEv @,%,! */ -0.148492, -0.014924,  0.244696, /*             solrHitsANormEv d01: -0.408112 */
	/*              solrMaxScoreEv @,%,! */  0.141201, -0.023911,  0.258085, /*              solrMaxScoreEv d01: -0.140795 */
	/*          solrHitsMaxScoreEv @,%,! */ -0.013329, -0.022700,  0.258085, /*          solrHitsMaxScoreEv d01: -0.294114 */
	/*                 phase0Score @,%,! */ -0.363732, -0.146005,  0.000000, /*                 phase0Score d01: -0.509737 */
	/*                 phase1Score @,%,! */  0.482195,  1.074743,  0.000000, /*                 phase1Score d01:  1.556938 */
/* intercept */ -0.039807
